version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pharma_db}
      POSTGRES_USER: ${POSTGRES_USER:-pharma_user}  
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pharma_user} -d ${POSTGRES_DB:-pharma_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Aplicaci√≥n Django
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgres://${POSTGRES_USER:-pharma_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-pharma_db}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-false}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-false}
      - CSRF_COOKIE_SECURE=${CSRF_COOKIE_SECURE:-false}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  static_volume:
  media_volume:
